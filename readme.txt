********************************************
                                                         知识点总结
********************************************
一. 设计模式设计原则
	1. 开闭原则
		对扩展开发，对修改关闭,为了使程序的扩展性好,易于维护和升级，我们需要使用接口和抽象类
	2. 里氏代换原则
		任何基类可以出现的地方， 子类一定可以出现，只有当衍生类可以替换掉基类，软件单位的功能不受影响时
		基类才能真正被复用，而衍生类也能在基类的基础上增加新的功能，里氏代换原则是对"开闭原则"的补充,
		实现"开闭原则"的关键步骤就是抽象，而基类和子类的继承关系就是抽象化的具体实现
	3. 依赖倒转原则
		这个是开闭原则的基础，具体内容：针对接口编程，依赖于抽象而不依赖于具体
	4. 接口隔离原则
		使用多个隔离的接口，比使用单个接口要好，这是一个降低类之间耦合的意思，设计模式其实就是一个软件
		的设计思想，从大型软件架构出发,为了升级和维护方便，降低依赖，降低耦合
	5. 迪米特原则(最少知道原则)
		一个实体尽量少的与其他实体之间发生相互作用，使得系统功能模块相对独立
	6. 合成复用原则
		尽量使用组合/聚合的方式，而不使用继承
		
二。 设计模式分类
	1. 创建型模式: 
		工厂方法、抽象工厂、单例模式、建造者模式、原型模式
	2. 结构型模式:
		适配器模式、装饰器模式、代理模式、外观模式、桥接模式、组合模式、享元模式
	3. 行为型模式:
		策略模式、模板方法模式、观察者模式、迭代子模式、责任聊模式、命令模式、备忘录模式、状态模式、访问者模式
		中介者模式、解释器模式